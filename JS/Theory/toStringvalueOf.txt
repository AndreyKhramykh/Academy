// Оба метода - valueOf и toString - части прототипа Object, и они используются для преобразования объекта в примитивное значение.

// Бывают операции, при которых объект должен быть преобразован в примитив.

// Например:
// Строковое преобразование – если объект выводится через alert(obj).
// Численное преобразование – при арифметических операциях, сравнении с примитивом.
// Логическое преобразование – при if(obj) и других логических операциях.

// VALUE OF 
// Этот метод используется JavaScript для получения примитивного значения объекта. Если объект используется в контексте, ожидающем примитивное значение (например, математические операции), JavaScript вызывает метод valueOf() для получения соответствующего примитивного значения объекта. Если метод valueOf() не возвращает примитивное значение, то вызывается метод toString().
// Вызов метода valueOf на объекте вернет object {...}
// Для численного преобразования объекта используется метод valueOf, а если его нет – то toString
// Метод valueOf обязан возвращать примитивное значение, иначе его результат будет проигнорирован. При этом – не обязательно числовое.

// TO STRING
// Этот метод преобразует объект в строку. Если объект используется в контексте, где ожидается строковое значение (например, когда объект выводится с помощью оператора +), JavaScript вызывает метод toString() для получения строкового представления объекта.
// Вызов метода toString на объекте вернет [object Object]
// Результат вызова кастомного toString может вернуть любой примитив
// toString для массивов выводит список элементов "1,2"
// toString для дат выводит дату в виде строки
// toString для функции выводит её код


// 1) Цель использования:
// valueOf(): Основная цель valueOf() - вернуть примитивное значение объекта. Обычно это то же самое значение, что и сам объект, но метод может быть переопределен для возврата другого значения.
// toString(): Цель toString() - предоставить строковое представление объекта. Это может быть полезно для представления объекта в текстовой форме, например, при выводе или конкатенации строк.

// 2) Возвращаемое значение:
// valueOf(): Возвращает примитивное значение объекта. Если метод не переопределен, по умолчанию возвращает сам объект.
// toString(): Возвращает строковое представление объекта. Обычно это строка, содержащая информацию о типе объекта и его содержимом.

// 3) Порядок вызова:
// Если операция ожидает примитивное значение (например, математические операции), JavaScript сначала вызывает метод valueOf(), а затем, если необходимо, метод toString().
// Если операция ожидает строку (например, конкатенация строк), JavaScript вызывает метод toString(), а затем, если необходимо, метод valueOf().


// В логическом контексте объект – всегда true.
// При строковом преобразовании объекта используется его метод toString. Он должен возвращать примитивное значение, причём не обязательно именно строку.
// Для численного преобразования используется метод valueOf, который также может возвратить любое примитивное значение. У большинства объектов valueOf не работает (возвращает сам объект и потому игнорируется), при этом для численного преобразования используется toString.