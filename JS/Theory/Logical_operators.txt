&& - оператор И
Возвращает первое false слева направо, если все true - возвращает последнее.
Приоритет выше чем у ИЛИ
&&= Оператор логического присваивания И
Пример:
a &&= b;
Если а истинно, то а = b

|| - оператор ИЛИ
Возвращает первое true слева направо, если все false - возвращает последнее

||= Оператор логического присваивания ИЛИ
Пример: 
a ||= b;
Если а ложно, а = b

! - оператор НЕ. Меняет значение на противоположное
Самый высокий приоритет

!! - приводит что либо к логическому типу true/false

?: логическая конструкция по типу if, может использовать для присваивания значений, или для замены конструкции if else
Пример:
условие ? значение1 : значение2 
Если условие true вернет значение1
Если условие false вернет значение2 

?? Оператор нулевого слияния. Оператор ?? возвращает первый аргумент, если он не null/undefined, иначе второй. Оператор ?? нужен для того, чтобы задать значение по умолчанию для потенциально неопределённой переменной.
Важное различие между || и ?? заключается в том, что:
|| возвращает первое истинное значение.
?? возвращает первое определённое значение.
Проще говоря, оператор || не различает false, 0, пустую строку "" и null/undefined. Для него они все одинаковы, т.е. являются ложными значениями. Если первым аргументом для оператора || будет любое из перечисленных значений, то в качестве результата мы получим второй аргумент.

?. - опциональная цепочка. Безопасный метод получения свойств обьекта, даже если их нет. Иначе выводило бы ошибку
Можно решить проблемы отсутсвующего свойства цепочкой if else (? :), или проверкой && (вернуло бы тру, если все свойства имеют значения). Но это не оптимальное решение.

Опциональная цепочка ?. останавливает вычисление и возвращает undefined, если значение перед ?. равно undefined или null.
Пример:
let user = {};

alert( user?.address?.street ); 

Может быть использована с функциями, которых не существует.

Синтаксис опциональной цепочки ?. имеет три формы:
obj?.prop – возвращает obj.prop если obj существует, в противном случае undefined.
obj?.[prop] – возвращает obj[prop] если obj существует, в противном случае undefined.
obj.method?.() – вызывает obj.method(), если obj.method существует, в противном случае возвращает undefined.