5 - 2 

5, 2 - операнды

Унарный - оператор к одному операнду
Бинарный - к двум
Тернарный - к трем

+ сложение
- вычитание 
* умножение
/ деление 
** возведение в степень
% остаток от деления
++ увеличение на 1 инкремент
-- уменьшение на 1 декремент
> true когда левый операнд больше правого
< true когда правый больше левого

Побитовые операторы интерпретируют операнды как последовательность из 32 битов (нулей и единиц). Они производят операции, используя двоичное представление числа, и возвращают новую последовательность из 32 бит (число) в качестве результата

^ Побитовое исключающее ИЛИ XOR. Ставит 1 на бит результата, для которого только один из соответствующих битов операндов равен 1 (но не оба).
~ Побитовое НЕ NOT. Заменяет каждый бит операнда на противоположный.


Побитовые операторы и двоичная система исчеслений может использоваться в шифровании данных. 

Также с помощью двоичных чисел можно зашифровать какую то логику, например:

Пользователь/	Просмотр статей/	Изменение статей/	Просмотр товаров/	Изменение товаров/	Управление правами

Гость	1	0	1	0	0	= 20
Редактор	1	1	1	1	0	= 30
Админ	1	1	1	1	1	= 31

К каждому разделу определяется 0 если нет доступа, 1 если доступ есть. Последовательность 0/1 преобразовываеться в число в десятичной системе.
Таким образом десятичное 20 соотвествует правам Гостя, и тд.

Как правило, битовое представление числа используется для:

Округления числа: (12.34^0) = 12.
Проверки на равенство -1: if (~n) { n не -1 }.
Упаковки нескольких битовых значений («флагов») в одно значение. Это экономит память и позволяет проверять наличие комбинации флагов одним оператором &.
Других ситуаций, когда нужны битовые маски.